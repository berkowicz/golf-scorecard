// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using golf_scorecard.Data;

#nullable disable

namespace golf_scorecard.Server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("golf_scorecard.Server.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Course");
                });

            modelBuilder.Entity("golf_scorecard.Server.Models.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Gender");
                });

            modelBuilder.Entity("golf_scorecard.Server.Models.Hole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CourseRefId")
                        .HasColumnType("int");

                    b.Property<int>("HoleIndex")
                        .HasColumnType("int");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<int>("Par")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseRefId");

                    b.ToTable("Hole");
                });

            modelBuilder.Entity("golf_scorecard.Server.Models.SlopeRating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("CR")
                        .HasColumnType("real");

                    b.Property<int>("CourseRefId")
                        .HasColumnType("int");

                    b.Property<int>("GenderRefId")
                        .HasColumnType("int");

                    b.Property<float>("SchratchValue")
                        .HasColumnType("real");

                    b.Property<float>("Slope")
                        .HasColumnType("real");

                    b.Property<int>("TeeRefId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseRefId");

                    b.HasIndex("GenderRefId");

                    b.HasIndex("TeeRefId");

                    b.ToTable("SlopeRating");
                });

            modelBuilder.Entity("golf_scorecard.Server.Models.Tee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tee");
                });

            modelBuilder.Entity("golf_scorecard.Server.Models.Hole", b =>
                {
                    b.HasOne("golf_scorecard.Server.Models.Course", "Course")
                        .WithMany("Holes")
                        .HasForeignKey("CourseRefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("golf_scorecard.Server.Models.SlopeRating", b =>
                {
                    b.HasOne("golf_scorecard.Server.Models.Course", "Course")
                        .WithMany("SlopeRatings")
                        .HasForeignKey("CourseRefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("golf_scorecard.Server.Models.Gender", "Gender")
                        .WithMany("SlopeRatings")
                        .HasForeignKey("GenderRefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("golf_scorecard.Server.Models.Tee", "Tee")
                        .WithMany()
                        .HasForeignKey("TeeRefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Gender");

                    b.Navigation("Tee");
                });

            modelBuilder.Entity("golf_scorecard.Server.Models.Course", b =>
                {
                    b.Navigation("Holes");

                    b.Navigation("SlopeRatings");
                });

            modelBuilder.Entity("golf_scorecard.Server.Models.Gender", b =>
                {
                    b.Navigation("SlopeRatings");
                });
#pragma warning restore 612, 618
        }
    }
}
